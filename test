
def findSubstring(s, k):

    my_map = {}
    for i in range(len(s) - k + 1):
        temp = my_map.get(s[i : i + k], 0)
        my_map[s[i : i + k]] = temp + 1
    return my_map

k = int(input().strip())
A = input().strip()
B = input().strip()

A_map = findSubstring(A, k)
B_map = findSubstring(B, k)

count = 0
for item in A_map.items():
    if item[0] in B_map.keys():
        count += B_map[item[0]]

print(count)



import math

Q, P = list(map(int, input().strip().split()))
N = math.floor(math.sqrt(2 * (Q + P)))


def func(Q, P, N):
    if N * (N + 1) != (Q + P) * 2:
        return -1
    if Q <= N:
        return 1
    res = 0
    q = Q
    n = N
    while (q >= n) and (n > 0):
        q -= n
        n -= 1
        res += 1
    if q != 0:
        res += 1

    return res


print(func(Q, P, N))










